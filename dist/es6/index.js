import { Animation } from "./animation";
import { BrowserStyles } from "./browser_styles";
import { BrowserClock } from './browser_clock';
export class ElementAnimatePolyfill {
    animate(element, keyframes, options, clock = null, styles = null) {
        return new Animation(keyframes, options, clock, styles).create(element);
    }
}
var polyfill = new ElementAnimatePolyfill();
var globalClock = new BrowserClock();
var globalStyles = new BrowserStyles();
var elementAnimateFn = window['$$elementAnimateFn'] = function (element, keyframes, options) {
    var player = polyfill.animate(element, keyframes, options, globalClock, globalStyles);
    player.play();
    return player;
};
if (!Element.prototype['animate']) {
    Element.prototype['animate'] = function (keyframes, options) {
        elementAnimateFn(this, keyframes, options);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGFBQWE7T0FFOUIsRUFBQyxhQUFhLEVBQUMsTUFBTSxrQkFBa0I7T0FDdkMsRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUI7QUFFNUM7SUFDRSxPQUFPLENBQUMsT0FBb0IsRUFDcEIsU0FBb0MsRUFDcEMsT0FBZSxFQUNmLEtBQUssR0FBaUIsSUFBSSxFQUMxQixNQUFNLEdBQWtCLElBQUk7UUFDbEMsTUFBTSxDQUFDLElBQUksU0FBUyxDQUFDLFNBQVMsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMxRSxDQUFDO0FBQ0gsQ0FBQztBQUVELElBQUksUUFBUSxHQUFHLElBQUksc0JBQXNCLEVBQUUsQ0FBQztBQUM1QyxJQUFJLFdBQVcsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ3JDLElBQUksWUFBWSxHQUFHLElBQUksYUFBYSxFQUFFLENBQUM7QUFDdkMsSUFBSSxnQkFBZ0IsR0FBRyxNQUFNLENBQUMsb0JBQW9CLENBQUMsR0FBRyxVQUFTLE9BQU8sRUFBRSxTQUFTLEVBQUUsT0FBTztJQUN4RixJQUFJLE1BQU0sR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUN0RixNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDZCxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQ2hCLENBQUMsQ0FBQTtBQUVELEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxVQUFVLFNBQVMsRUFBRSxPQUFPO1FBQ3pELGdCQUFnQixDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDN0MsQ0FBQyxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QW5pbWF0aW9ufSBmcm9tIFwiLi9hbmltYXRpb25cIjtcbmltcG9ydCB7UGxheWVyfSBmcm9tIFwiLi9wbGF5ZXJcIjtcbmltcG9ydCB7QnJvd3NlclN0eWxlc30gZnJvbSBcIi4vYnJvd3Nlcl9zdHlsZXNcIjtcbmltcG9ydCB7QnJvd3NlckNsb2NrfSBmcm9tICcuL2Jyb3dzZXJfY2xvY2snO1xuXG5leHBvcnQgY2xhc3MgRWxlbWVudEFuaW1hdGVQb2x5ZmlsbCB7XG4gIGFuaW1hdGUoZWxlbWVudDogSFRNTEVsZW1lbnQsXG4gICAgICAgICAga2V5ZnJhbWVzOiB7W2tleTogc3RyaW5nXTogc3RyaW5nfVtdLFxuICAgICAgICAgIG9wdGlvbnM6IG51bWJlcixcbiAgICAgICAgICBjbG9jazogQnJvd3NlckNsb2NrID0gbnVsbCxcbiAgICAgICAgICBzdHlsZXM6IEJyb3dzZXJTdHlsZXMgPSBudWxsKTogUGxheWVyIHtcbiAgICByZXR1cm4gbmV3IEFuaW1hdGlvbihrZXlmcmFtZXMsIG9wdGlvbnMsIGNsb2NrLCBzdHlsZXMpLmNyZWF0ZShlbGVtZW50KTtcbiAgfVxufVxuXG52YXIgcG9seWZpbGwgPSBuZXcgRWxlbWVudEFuaW1hdGVQb2x5ZmlsbCgpO1xudmFyIGdsb2JhbENsb2NrID0gbmV3IEJyb3dzZXJDbG9jaygpO1xudmFyIGdsb2JhbFN0eWxlcyA9IG5ldyBCcm93c2VyU3R5bGVzKCk7XG52YXIgZWxlbWVudEFuaW1hdGVGbiA9IHdpbmRvd1snJCRlbGVtZW50QW5pbWF0ZUZuJ10gPSBmdW5jdGlvbihlbGVtZW50LCBrZXlmcmFtZXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBsYXllciA9IHBvbHlmaWxsLmFuaW1hdGUoZWxlbWVudCwga2V5ZnJhbWVzLCBvcHRpb25zLCBnbG9iYWxDbG9jaywgZ2xvYmFsU3R5bGVzKTtcbiAgcGxheWVyLnBsYXkoKTtcbiAgcmV0dXJuIHBsYXllcjtcbn1cblxuaWYgKCFFbGVtZW50LnByb3RvdHlwZVsnYW5pbWF0ZSddKSB7XG4gIEVsZW1lbnQucHJvdG90eXBlWydhbmltYXRlJ10gPSBmdW5jdGlvbiAoa2V5ZnJhbWVzLCBvcHRpb25zKSB7XG4gICAgZWxlbWVudEFuaW1hdGVGbih0aGlzLCBrZXlmcmFtZXMsIG9wdGlvbnMpO1xuICB9O1xufVxuIl19